# env:
#   global:
#     - CONDA_PREFIX=$HOME/miniconda
#     - MINICONDA_URL_BASE="https://repo.continuum.io/miniconda/Miniconda3-latest"

sudo: false

language: python

env:
  - PEP=true
  - PEP=false

matrix:
  include:
    - os: linux
      python: 2.7
      env: PEP=false
    - os: linux
      python: 3.6
      env: PEP=false
    - os: linux
      python: 2.7
      env: PEP=true
    - os: linux
      python: 3.6
      env: PEP=true
    # Temporarily disable Mac OSX from CI
    # - os: osx
    #   language: generic
    #   env: PYTHON=2.7
    # - os: osx
    #   language: generic
    #   env: PYTHON=3.6
  allow_failures:
    - PEP=true
      env: KEY=VALUE

before_install:
  - |
    if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then
      curl $MINICONDA_URL_BASE-MacOSX-x86_64.sh > $HOME/miniconda.sh
      bash $HOME/miniconda.sh -b -p $CONDA_PREFIX
      export PATH="$CONDA_PREFIX/bin:$PATH"
      hash -r
      conda config --set always_yes yes --set changeps1 no
      conda update conda -y
      conda create -n pyenv python=$PYTHON anaconda
      source activate pyenv
    else
      export DISPLAY=':99.0' 
      Xvfb :99 -screen 0 1024x768x24 > /dev/null 2>&1 &
    fi
  - pip install pycodestyle

install:
  - |
    if [ "$TRAVIS_OS_NAME" == "osx" ]; then
      echo "Build on $TRAVIS_OS_NAME for Python $PYTHON"
    else
      echo "Build on $TRAVIS_OS_NAME for Python $TRAVIS_PYTHON_VERSION"
    fi
  - python --version
  - pip install .

script:
  - if $PEP; then pycodestyle ./; fi
  - python -m unittest discover
